{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["swapArr","arr","index1","index2","splice","searchState","searchText","searchedColumn","handleSearch","selectedKeys","confirm","dataIndex","searchInput","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","style","padding","ref","node","placeholder","value","onChange","e","target","onPressEnter","width","marginBottom","display","type","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","App","state","useState","dataSource","setDataSource","expandable","setExpandable","dataPrintScreen","setDataPrintScreen","dataHarness","setDataHarness","dataTrappings","setDataTrappings","setNameList","filters","setFilters","loading","setLoading","attrDetail","useEffect","a","fetch","mountsRes","json","mounts","console","log","dataDescriptionRes","dataDescription","expandedRowRender","name","suffix","rowExpandable","dataPrintScreenRes","dataHarnessRes","dataTrappingsRes","fetchData","length","nameList","forEach","v","push","speed","replace","sort","b","join","columns","title","indexOf","align","sorter","compare","row","total_speed","index","tags","attrs_1","attrs_2","attrs_3","attrs_4","doubleRide","unshift","map","tag","Fragment","key","placement","toUpperCase","href","rel","fontSize","cursor","columns2","children","props","rowSpan","colSpan","minWidth","className","shape","DownloadOutlined","document","createElement","download","click","span","pagination","bordered","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"mounts/static/js/main.49b46057.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport { Table, Tag, Input, Button, Space, BackTop, Tooltip, Row, Col } from 'antd'\nimport Highlighter from 'react-highlight-words'\nimport { SearchOutlined, DownloadOutlined } from '@ant-design/icons'\n\nfunction swapArr(arr, index1, index2) {\n    arr[index1] = arr.splice(index2, 1, arr[index1])[0]\n    return arr\n}\n\n// 检索\nlet searchState = {\n    searchText: '',\n    searchedColumn: ''\n}\n\nfunction handleSearch(selectedKeys, confirm, dataIndex) {\n    confirm()\n    searchState = {\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex,\n    }\n}\n\nfunction handleReset(clearFilters) {\n    clearFilters()\n    searchState = { searchText: '' }\n}\n\nlet searchInput = null\n\nfunction getColumnSearchProps(dataIndex) {\n    return {\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={node => {\n                        searchInput = node\n                    }}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n          </Button>\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n          </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) =>\n            record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => searchInput.select())\n            }\n        },\n        render: text => searchState.searchedColumn === dataIndex ? (\n            <Highlighter\n                highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                searchWords={[searchState.searchText]}\n                autoEscape\n                textToHighlight={text.toString()}\n            />\n        ) : (\n                text\n            )\n    }\n}\n\nfunction App() {\n    const state = {\n        size: 'small'\n    }\n    const [dataSource, setDataSource] = useState([])\n    const [expandable, setExpandable] = useState({})\n    const [dataPrintScreen, setDataPrintScreen] = useState({})\n    const [dataHarness, setDataHarness] = useState([])\n    const [dataTrappings, setDataTrappings] = useState([])\n    const [nameList, setNameList] = useState('')\n    const [filters, setFilters] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [attrDetail] = useState({\n        \"劲足3级\": \"坐骑的饱食度大于86%时，移动速度额外提升8%\",\n        \"劲足5级\": \"坐骑的饱食度大于86%时，移动速度额外提升12%\",\n        \"劲足6级\": \"坐骑的饱食度大于86%时，移动速度额外提升14%\",\n        \"劲足7级\": \"坐骑的饱食度大于86%时，移动速度额外提升16%\",\n        \"劲足8级\": \"坐骑的饱食度大于86%时，移动速度额外提升18%\",\n        \"匹马5级\": \"在非双人同骑的时候，速度额外提升9%\",\n        \"匹马6级\": \"在非双人同骑的时候，速度额外提升10%\",\n        \"匹马7级\": \"在非双人同骑的时候，速度额外提升12%\",\n    })\n\n    const onDownload = e => {\n        const a = document.createElement(\"a\")\n        a.download = '马驹UID查询.xlsx'\n        a.href = 'https://bj.bcebos.com/v1/wz950116/jx3-pvx/坐骑/public/马驹UID查询.xlsx'\n        a.click()\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true)\n\n            // 列表数据\n            try {\n                const mountsRes = await fetch('http://wz950116.com/static/data/mounts/mounts.json')\n                const mounts = await mountsRes.json()\n                setDataSource(mounts)\n            } catch (err) {\n                console.log('列表请求失败')\n            }\n\n            // 详情数据\n            try {\n                const dataDescriptionRes = await fetch('http://wz950116.com/static/data/mounts/description.json')\n                const dataDescription = await dataDescriptionRes.json()\n                const expandable = {\n                    expandedRowRender: record => <p>{dataDescription[record.name] || dataDescription[record.name + '·' + record.suffix]}</p>,\n                    rowExpandable: record => !!(dataDescription[record.name] || dataDescription[record.name + '·' + record.suffix])\n                }\n                setExpandable(expandable)\n            } catch (err) {\n                console.log('详情数据请求失败')\n            }\n\n            // 截图\n            try {\n                const dataPrintScreenRes = await fetch('http://wz950116.com/static/data/mounts/printscreen.json')\n                const dataPrintScreen = await dataPrintScreenRes.json()\n                setDataPrintScreen(dataPrintScreen)\n            } catch (err) {\n                console.log('截图数据请求失败')\n            }\n\n            // 马具\n            try {\n                const dataHarnessRes = await fetch('http://wz950116.com/static/data/mounts/harness.json')\n                const dataHarness = await dataHarnessRes.json()\n                setDataHarness(dataHarness)\n            } catch (err) {\n                console.log('马具数据请求失败')\n            }\n\n            // 马饰\n            try {\n                const dataTrappingsRes = await fetch('http://wz950116.com/static/data/mounts/trappings.json')\n                const dataTrappings = await dataTrappingsRes.json()\n                setDataTrappings(dataTrappings)\n            } catch (err) {\n                console.log('马具数据请求失败')\n            }\n            setLoading(false)\n        }\n        fetchData()\n    }, [])\n\n    useEffect(() => {\n        // 排序\n        if (dataSource.length === 0) return\n        const nameList = [], filters = []\n        dataSource.forEach(v => {\n            if (!nameList.includes(v.name)) {\n                nameList.push(v.name)\n                filters.push({\n                    text: v.name,\n                    value: v.name,\n                    speed: v.speed.replace('%', '')\n                })\n            }\n        })\n        filters.sort((a, b) => {\n            return a.speed - b.speed\n        })\n        setNameList(nameList.join())\n        setFilters(filters)\n    }, [dataSource])\n\n    const columns = [\n        {\n            title: '名称',\n            dataIndex: 'name',\n            filters,\n            onFilter: (value, record) => record.name.indexOf(value) === 0\n        },\n        {\n            title: '后缀',\n            dataIndex: 'suffix',\n            align: 'center'\n        },\n        {\n            title: '移动速度',\n            dataIndex: 'speed',\n            align: 'center',\n            sorter: {\n                compare: (a, b) => a.speed.replace('%', '') - b.speed.replace('%', '')\n            },\n            render: (text, row) => <span style={{ color: row.speed === '120%' ? '#f81d22' : '' }}>{text}</span>\n        },\n        {\n            title: '综合速度',\n            dataIndex: 'total_speed',\n            align: 'center',\n            sorter: {\n                compare: (a, b) => a.total_speed.replace('%', '') - b.total_speed.replace('%', '')\n            },\n            render: (text, row) => <span style={{ color: row.total_speed === '138%' ? '#f81d22' : '' }}>{text}</span>\n        },\n        {\n            title: '属性',\n            dataIndex: 'tags',\n            render: (text, row, index) => {\n                const tags = [row.attrs_1, row.attrs_2, row.attrs_3, row.attrs_4]\n                if ((row.attrs_1 && row.attrs_1.includes('劲足')) || (row.attrs_1 && row.attrs_1.includes('匹马'))) {\n                    const index = tags.indexOf(row.attrs_1)\n                    swapArr(tags, index, 0)\n                }\n                if ((row.attrs_2 && row.attrs_2.includes('劲足')) || (row.attrs_2 && row.attrs_2.includes('匹马'))) {\n                    const index = tags.indexOf(row.attrs_2)\n                    swapArr(tags, index, 0)\n                }\n                if ((row.attrs_3 && row.attrs_3.includes('劲足')) || (row.attrs_3 && row.attrs_3.includes('匹马'))) {\n                    const index = tags.indexOf(row.attrs_3)\n                    swapArr(tags, index, 0)\n                }\n                if ((row.attrs_4 && row.attrs_4.includes('劲足')) || (row.attrs_4 && row.attrs_4.includes('匹马'))) {\n                    const index = tags.indexOf(row.attrs_4)\n                    swapArr(tags, index, 0)\n                }\n                if (row.doubleRide === '1') tags.unshift('双骑')\n                return (\n                    <span>\n                        {tags.map(tag => {\n                            if (!tag) return null\n                            let color = tag === '双骑' ? 'volcano' : tag.includes('劲足') || tag.includes('匹马') ? 'geekblue' : 'green'\n                            return (\n                                <React.Fragment key={tag}>\n                                    {\n                                        attrDetail[tag] ? (\n                                            <Tooltip placement=\"top\" title={attrDetail[tag]} key={tag}>\n                                                <Tag color={color} key={tag}>\n                                                    {tag.toUpperCase()}\n                                                </Tag>\n                                            </Tooltip>\n                                        ) : (\n                                                <Tag color={color} key={tag}>\n                                                    {tag.toUpperCase()}\n                                                </Tag>\n                                            )\n                                    }\n                                </React.Fragment>\n                            )\n                        })}\n                    </span>\n                )\n            }\n        },\n        {\n            title: '品质等级',\n            dataIndex: 'grade',\n            align: 'center'\n        },\n        {\n            title: '成马UID',\n            dataIndex: 'uid',\n            ...getColumnSearchProps('uid')\n        },\n        {\n            title: '马驹UID / 出处',\n            dataIndex: 'child_uid',\n            ...getColumnSearchProps('child_uid')\n        },\n        {\n            title: '截图',\n            dataIndex: 'printscreen',\n            align: 'center',\n            render: (text, row, index) => {\n                return (\n                    dataPrintScreen[row.name + '·' + row.suffix] ?\n                        <a href={dataPrintScreen[row.name + '·' + row.suffix]} target='_blank' rel='noreferrer noopener'>\n                            <SearchOutlined style={{ fontSize: '14px', color: '#08c', cursor: 'pointer' }} />\n                        </a> : dataPrintScreen[row.name] ?\n                            <a href={dataPrintScreen[row.name]} target='_blank' rel='noreferrer noopener'>\n                                <SearchOutlined style={{ fontSize: '14px', color: '#08c', cursor: 'pointer' }} />\n                            </a> : ''\n                )\n            }\n        }\n    ]\n\n    const columns2 = [\n        {\n            title: '名称',\n            dataIndex: 'name',\n            width: 100,\n            align: 'center',\n            render: (text, row, index) => {\n                if (index % 3 === 0) {\n                    return {\n                        children: <span>{text}</span>,\n                        props: {\n                            rowSpan: 3,\n                        }\n                    }\n                }\n                return {\n                    children: text,\n                    props: {\n                        rowSpan: 0,\n                        colSpan: 0\n                    }\n                }\n            }\n        },\n        {\n            title: '部位',\n            dataIndex: 'suffix',\n            width: 60,\n            align: 'center'\n        },\n        {\n            title: '速度',\n            dataIndex: 'speed',\n            width: 60,\n            align: 'center'\n        },\n        {\n            title: '来源',\n            dataIndex: 'origin',\n            width: 200,\n            align: 'center'\n        },\n        {\n            title: '描述',\n            dataIndex: 'description',\n            minWidth: 200,\n            align: 'left',\n            render: (text, row, index) => {\n                if (index % 3 === 0) {\n                    return {\n                        children: <span>{text}</span>,\n                        props: {\n                            rowSpan: 3,\n                        }\n                    }\n                }\n                return {\n                    children: text,\n                    props: {\n                        rowSpan: 0,\n                        colSpan: 0\n                    }\n                }\n            }\n        }\n    ]\n\n    const columns3 = [\n        {\n            title: '名称',\n            dataIndex: 'name',\n            width: 100,\n            align: 'center'\n        },\n        {\n            title: '速度',\n            dataIndex: 'speed',\n            width: 60,\n            align: 'center'\n        },\n        {\n            title: '来源',\n            dataIndex: 'origin',\n            width: 200,\n            align: 'center'\n        },\n        {\n            title: '描述',\n            dataIndex: 'description',\n            minWidth: 200,\n            align: 'left'\n        }\n    ]\n\n    return (\n        <React.Fragment>\n            {false ? nameList : ''}\n            <div className=\"download\">\n                <Tooltip title=\"下载文件\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<DownloadOutlined />} size=\"large\" loading={loading} onClick={onDownload} />\n                </Tooltip>\n            </div>\n            <Row>\n                <Col className=\"gutter-row\" span={24}>\n                    <Table {...state} loading={loading} expandable={expandable} columns={columns} dataSource={dataSource} pagination={false} />\n                </Col>\n                <Col className=\"gutter-row\" span={12}>\n                    <Table {...state} loading={loading} columns={columns2} dataSource={dataHarness} pagination={false} bordered />\n                </Col>\n                <Col className=\"gutter-row\" span={12}>\n                    <Table {...state} loading={loading} columns={columns3} dataSource={dataTrappings} pagination={false} bordered />\n                </Col>\n            </Row>\n            <BackTop>\n                <div className=\"ant-back-top-content\"><div className=\"ant-back-top-icon\"></div></div>\n            </BackTop>\n        </React.Fragment>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}